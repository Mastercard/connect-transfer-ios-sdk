// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios15.6 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name ConnectTransfer
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AtomicTransact
import Combine
import DeveloperToolsSupport
import Foundation
import SafariServices
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol ConnectTransferEventDelegate : AnyObject {
  func onInitializeConnectTransfer(_ data: Foundation.NSDictionary?)
  func onTermsAndConditionsAccepted(_ data: Foundation.NSDictionary?)
  func onLaunchTransferSwitch(_ data: Foundation.NSDictionary?)
  func onTransferEnd(_ data: Foundation.NSDictionary?)
  func onUserEvent(_ data: Foundation.NSDictionary?)
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor @preconcurrency public class ConnectTransferViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency weak public var delegate: (any ConnectTransfer.ConnectTransferEventDelegate)?
  @_Concurrency.MainActor @preconcurrency public init(connectTransferUrl: Swift.String)
  @objc deinit
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
}
extension ConnectTransfer.ConnectTransferViewController : SafariServices.SFSafariViewControllerDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func safariViewControllerDidFinish(_ controller: SafariServices.SFSafariViewController)
}
